<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Yazı Düzenle - Enerj.io Blog</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="/node_modules/tinymce/tinymce.min.js"></script>
</head>
<body class="bg-gray-100">
    <nav class="bg-white shadow-lg">
        <div class="max-w-7xl mx-auto px-4">
            <div class="flex justify-between h-16">
                <div class="flex">
                    <div class="flex-shrink-0 flex items-center">
                        <a href="/admin/dashboard" class="text-xl font-bold">Enerj.io Blog Admin</a>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <div class="px-4 py-6 sm:px-0">
            <div class="bg-white shadow sm:rounded-lg">
                <div class="px-4 py-5 sm:p-6">
                    <h2 class="text-lg leading-6 font-medium text-gray-900 mb-4">
                        Blog Yazısını Düzenle
                    </h2>
                    <form action="/admin/posts/<%= post._id %>" method="POST" enctype="multipart/form-data" id="editPostForm" onsubmit="updatePost(event)">
                        <div class="space-y-6">
                            <div>
                                <label for="title" class="block text-sm font-medium text-gray-700">
                                    Başlık
                                </label>
                                <input type="text" name="title" id="title" value="<%= post.title %>" required
                                    class="mt-1 block w-full shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm border-gray-300 rounded-md">
                            </div>

                            <div>
                                <label for="image" class="block text-sm font-medium text-gray-700">
                                    Kapak Görseli
                                </label>
                                <% if (post.image) { %>
                                    <img src="<%= post.image %>" alt="Mevcut görsel" class="mt-2 h-32 w-auto">
                                <% } %>
                                <input type="file" name="image" id="image" accept="image/*"
                                    class="mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                            </div>

                            <div>
                                <label for="content" class="block text-sm font-medium text-gray-700">
                                    İçerik
                                </label>
                                <div class="mt-1 relative">
                                    <textarea id="content" name="content" rows="10" required
                                        class="mt-1 block w-full shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm border-gray-300 rounded-md"><%= post.content %></textarea>
                                    <div class="mt-2 text-sm text-gray-500" id="characterCount">
                                        Karakter: 0 / 1,048,576 bytes (Firebase limit)
                                    </div>
                                </div>
                            </div>

                            <div class="flex justify-end">
                                <button type="submit" id="submitButton"
                                    class="ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-500 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                    Güncelle
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        let editor = null;
        const FIREBASE_LIMIT = 1048576; // 1MB in bytes

        // TinyMCE başlatma
        window.addEventListener('load', function() {
            tinymce.init({
                selector: '#content',
                height: 500,
                plugins: 'advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code fullscreen insertdatetime media table paste code help wordcount',
                toolbar: 'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help',
                setup: function(ed) {
                    editor = ed;
                    ed.on('init', function() {
                        console.log('TinyMCE başlatıldı');
                        updateCharacterCount(); // İlk yüklemede sayacı güncelle
                    });
                    ed.on('KeyUp', updateCharacterCount);
                    ed.on('Change', updateCharacterCount);
                }
            });
        });

        // Karakter sayısını güncelle
        function updateCharacterCount() {
            if (editor) {
                const content = editor.getContent();
                const byteSize = new Blob([content]).size;
                const countElement = document.getElementById('characterCount');
                const submitButton = document.getElementById('submitButton');
                
                // Renk değişimi için class'ları güncelle
                if (byteSize > FIREBASE_LIMIT) {
                    countElement.className = 'mt-2 text-sm text-red-500 font-bold';
                    submitButton.disabled = true;
                    submitButton.className = 'ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-400 cursor-not-allowed';
                } else if (byteSize > FIREBASE_LIMIT * 0.9) { // %90'ı aşıldığında uyarı
                    countElement.className = 'mt-2 text-sm text-yellow-500 font-bold';
                    submitButton.disabled = false;
                    submitButton.className = 'ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-500 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500';
                } else {
                    countElement.className = 'mt-2 text-sm text-gray-500';
                    submitButton.disabled = false;
                    submitButton.className = 'ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-500 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500';
                }
                
                countElement.textContent = `Karakter: ${byteSize.toLocaleString()} / ${FIREBASE_LIMIT.toLocaleString()} bytes (Firebase limit)`;
            }
        }

        // Form submit fonksiyonu
        async function updatePost(event) {
            event.preventDefault();
            
            const form = document.getElementById('editPostForm');
            const formData = new FormData(form);
            
            if (editor && editor.initialized) {
                const content = editor.getContent();
                const byteSize = new Blob([content]).size;
                
                if (byteSize > FIREBASE_LIMIT) {
                    alert('İçerik boyutu Firebase limitini (1MB) aşıyor. Lütfen içeriği kısaltın.');
                    return;
                }
                
                formData.append('content', content);
                console.log('TinyMCE içeriği alındı');
            } else {
                const textArea = document.getElementById('content');
                formData.append('content', textArea.value);
                console.log('Textarea içeriği alındı');
            }
            
            try {
                const response = await fetch(`/admin/posts/<%= post.id %>`, {
                    method: 'PUT',
                    credentials: 'include',
                    body: formData
                });
                
                const result = await response.json();
                
                if (response.ok) {
                    window.location.href = '/admin/dashboard';
                } else {
                    console.error('Sunucu hatası:', result);
                    alert('Güncelleme sırasında bir hata oluştu: ' + (result.error || 'Bilinmeyen hata'));
                }
            } catch (error) {
                console.error('Hata:', error);
                alert('Güncelleme sırasında bir hata oluştu: ' + error.message);
            }
        }
    </script>
</body>
</html>
